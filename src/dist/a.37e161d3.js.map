{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCMM,EAAA,EAAA,eAAA,CAAA,EAAA,EAAA,eAAA,CAAA,EAAA,EAAA,eAAA,CAKN,SAAS,gBAAgB,CAAC,mBAAoB,WAE1C,IAAM,EAAQ,CAAC,GAAI,QAAS,IAAK,IAAK,IAAI,CAY1C,SAAS,EAAY,CAAI,CAAE,CAAQ,EAI/B,OAoFA,IApFO,MAAM,GACR,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACF,SAAS,cAAc,CAAC,WAAW,SAAS,CAAG,EAKvB,YAApB,OAAO,GACP,GAER,GACC,KAAK,CAAC,AAAA,IAgFX,EA/EsB,EAClB,EACR,CAaC,IAAM,EAAc,OAAO,QAAQ,CAAC,QAAQ,CACxC,EAAc,aA0DnB,SAAS,IACL,GACJ,CAzDC,EAAM,OAAO,CAAC,AAAC,IACT,EAAY,QAAQ,CAAC,IAAM,IAC7B,CAAA,EAAc,CADhB,CAGF,GAEI,CAAC,GAAI,IAAK,QAAQ,CAAC,QAAQ,CAAC,IAC7B,CAAA,EAAc,OADK,EAIvB,EAAc,IAAM,EAAY,OAAO,CAAC,QAAS,IAAnC,gBAEd,AAxDW,MAAM,eACR,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACF,SAAS,IAAI,CAAC,SAAS,CAAG,CAC9B,GAoDK,IAAI,CAAC,IAAM,EAAY,EAAa,IAMjD,EAAM,OAAO,CAAC,AAAA,IACV,IAAI,EAAQ,IAAM,EAAS,OAAO,CAAC,QAAS,IAC5C,KAAK,EAAO,WAEJ,CAAC,GAAI,IAAK,QAAQ,CAAC,QAAQ,CAAC,IAC5B,CAAA,EAAQ,OADU,EAMtB,IAAI,EAAc,IAAM,AAFxB,CAAA,EAAQ,EAAM,OAAO,CAAC,QAAS,IAAI,OAAO,CAAC,IAAK,GAAhD,EAE8B,OAAO,CAAC,QAAS,IAA7B,gBAEd,GAAe,IACf,EAAc,EACd,EAAY,EAAa,GAGjC,EACJ,GA4BA,KAAK,KAAK,EACd","sources":["<anon>","js/routing.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirea605\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirea605\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n//\n//\n// Vinh\n//\n//\n\nvar $6QD2Y = parcelRequire(\"6QD2Y\");\nvar $a7eb2676cedbb442$require$onAfterLoadPage = $6QD2Y.onAfterLoadPage;\nvar $a7eb2676cedbb442$require$onStartLoadPage = $6QD2Y.onStartLoadPage;\nvar $a7eb2676cedbb442$require$onLoadPageError = $6QD2Y.onLoadPageError;\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Mảng chứa các trang HTML\n    const pages = [\n        \"\",\n        \"index\",\n        \"a\",\n        \"b\",\n        \"c\"\n    ];\n    // Hàm để load layout\n    function loadLayout() {\n        return fetch(\"layout.html\").then((response)=>response.text()).then((html)=>{\n            document.body.innerHTML = html;\n        });\n    }\n    // Hàm để load nội dung trang\n    function loadContent(page1, callback) {\n        startLoadPage();\n        return fetch(page1).then((response)=>response.text()).then((html)=>{\n            document.getElementById(\"content\").innerHTML = html;\n            // for test catch ()\n            // throw new Error('Network response was not ok ');\n            if (typeof callback === \"function\") callback();\n        }).catch((error)=>{\n            loadPageError(error);\n        });\n    }\n    // function appendScript(src) {\n    //     return new Promise((resolve, reject) => {\n    //         const script = document.createElement('script');\n    //         script.src = src;\n    //         script.onload = resolve;\n    //         script.onerror = reject;\n    //         document.head.appendChild(script);\n    //     });\n    // }\n    // Kiểm tra URL hiện tại để xác định trang cần tải\n    const currentPath = window.location.pathname;\n    let currentPage = \"index.html\"; // Mặc định là index.html\n    // Xác định trang cần load dựa trên URL\n    pages.forEach((page1)=>{\n        if (currentPath.endsWith(\"/\" + page1)) currentPage = page1;\n    });\n    if ([\n        \"\",\n        \"/\",\n        \"index\"\n    ].includes(currentPage)) currentPage = \"index\";\n    currentPage = \"/\" + currentPage.replace(\".html\", \"\") + \"-content\" + \".html\";\n    loadLayout().then(()=>loadContent(currentPage, afterLoadPage));\n    //======================== ở đây là ĐỢI cho người dùng truy cập thì mới chạy code này S\n    // Sử dụng page.js để định nghĩa route cho từng trang trong mảng\n    pages.forEach((pageLINK)=>{\n        let route = \"/\" + pageLINK.replace(\".html\", \"\"); // Tạo route từ tên file (vd: 'a.html' thành '/a')\n        page(route, function() {\n            if ([\n                \"\",\n                \"/\",\n                \"index\"\n            ].includes(route)) route = \"index\";\n            route = route.replace(\".html\", \"\").replace(\"/\", \"\");\n            let contentLINK = \"/\" + route.replace(\".html\", \"\") + \"-content\" + \".html\";\n            if (currentPage != contentLINK) {\n                currentPage = contentLINK;\n                loadContent(contentLINK, afterLoadPage);\n            }\n        });\n    });\n    // page('/', function () {\n    //     loadLayout().then(()=> {\n    //         loadContent('index-content.html')\n    //     })\n    // });\n    //======================== ở đây là ĐỢI cho người dùng truy cập thì mới chạy code này E\n    function startLoadPage() {\n        $a7eb2676cedbb442$require$onStartLoadPage();\n    }\n    function afterLoadPage() {\n        $a7eb2676cedbb442$require$onAfterLoadPage();\n    }\n    function loadPageError(error) {\n        $a7eb2676cedbb442$require$onLoadPageError(error);\n    }\n    // Khởi tạo router\n    page.start();\n});\n\n\n//# sourceMappingURL=a.37e161d3.js.map\n","//\r\n//\r\n// Vinh\r\n//\r\n//\r\n\r\nconst { onAfterLoadPage, onStartLoadPage, onLoadPageError } = require(\"./app\");\r\n\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Mảng chứa các trang HTML\r\n    const pages = ['', 'index', 'a', 'b', 'c'];\r\n\r\n    // Hàm để load layout\r\n    function loadLayout() {\r\n        return fetch('layout.html')\r\n            .then(response => response.text())\r\n            .then(html => {\r\n                document.body.innerHTML = html;\r\n            });\r\n    }\r\n\r\n    // Hàm để load nội dung trang\r\n    function loadContent(page, callback) {\r\n\r\n        startLoadPage()\r\n\r\n        return fetch(page)\r\n            .then(response => response.text())\r\n            .then(html => {\r\n                document.getElementById('content').innerHTML = html;\r\n\r\n                // for test catch ()\r\n                // throw new Error('Network response was not ok ');\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback(); \r\n                }\r\n            }) \r\n            .catch(error => {\r\n                loadPageError(error)\r\n            });\r\n    }\r\n\r\n    // function appendScript(src) {\r\n    //     return new Promise((resolve, reject) => {\r\n    //         const script = document.createElement('script');\r\n    //         script.src = src;\r\n    //         script.onload = resolve;\r\n    //         script.onerror = reject;\r\n    //         document.head.appendChild(script);\r\n    //     });\r\n    // }\r\n\r\n     // Kiểm tra URL hiện tại để xác định trang cần tải\r\n     const currentPath = window.location.pathname;\r\n     let currentPage = 'index.html'; // Mặc định là index.html\r\n \r\n     // Xác định trang cần load dựa trên URL\r\n     pages.forEach((page1) => {\r\n       if (currentPath.endsWith(\"/\" + page1)) {\r\n         currentPage = page1;\r\n       }\r\n     });\r\n\r\n     if (['', '/', 'index'].includes(currentPage)) {\r\n        currentPage = 'index'\r\n    }\r\n\r\n    currentPage = '/' + currentPage.replace('.html', '') + '-content' + '.html'\r\n    \r\n    loadLayout().then(() => loadContent(currentPage, afterLoadPage))\r\n\r\n    //======================== ở đây là ĐỢI cho người dùng truy cập thì mới chạy code này S\r\n\r\n\r\n    // Sử dụng page.js để định nghĩa route cho từng trang trong mảng\r\n    pages.forEach(pageLINK => {\r\n        let route = '/' + pageLINK.replace('.html', ''); // Tạo route từ tên file (vd: 'a.html' thành '/a')\r\n        page(route, function () {\r\n\r\n            if (['', '/', 'index'].includes(route)) {\r\n                route = 'index'\r\n            }\r\n\r\n            route = route.replace('.html', '').replace('/', '')\r\n\r\n            let contentLINK = '/' + route.replace('.html', '') + '-content' + '.html'\r\n\r\n            if (currentPage != contentLINK) {\r\n                currentPage = contentLINK\r\n                loadContent(contentLINK, afterLoadPage)\r\n            }\r\n       \r\n        });\r\n    });\r\n\r\n    // page('/', function () {\r\n    //     loadLayout().then(()=> {\r\n    //         loadContent('index-content.html')\r\n    //     })\r\n        \r\n    // });\r\n\r\n\r\n\r\n    //======================== ở đây là ĐỢI cho người dùng truy cập thì mới chạy code này E\r\n\r\n   \r\n\r\n    function startLoadPage() {\r\n        onStartLoadPage()\r\n    }\r\n\r\n    function afterLoadPage() {\r\n        onAfterLoadPage()\r\n    }\r\n\r\n    function loadPageError(error) {\r\n        onLoadPageError(error)\r\n    }\r\n\r\n    // Khởi tạo router\r\n    page.start();\r\n});\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6QD2Y","$a7eb2676cedbb442$require$onAfterLoadPage","onAfterLoadPage","$a7eb2676cedbb442$require$onStartLoadPage","onStartLoadPage","$a7eb2676cedbb442$require$onLoadPageError","onLoadPageError","document","addEventListener","pages","loadContent","page1","callback","fetch","then","response","text","html","getElementById","innerHTML","catch","error","currentPath","window","location","pathname","currentPage","afterLoadPage","forEach","endsWith","includes","replace","loadLayout","body","pageLINK","route","page","contentLINK","start"],"version":3,"file":"a.37e161d3.js.map"}